<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 自话 | Here comes the Sun]]></title>
  <link href="http://sunng87.github.io/blog//blog/categories/zi-hua/atom.xml" rel="self"/>
  <link href="http://sunng87.github.io/blog//"/>
  <updated>2014-07-08T23:32:35+08:00</updated>
  <id>http://sunng87.github.io/blog//</id>
  <author>
    <name><![CDATA[Sun Ning]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[工作四周年]]></title>
    <link href="http://sunng87.github.io/blog//blog/2013/07/16/four-years-as-programmer/"/>
    <updated>2013-07-16T21:33:00+08:00</updated>
    <id>http://sunng87.github.io/blog//blog/2013/07/16/four-years-as-programmer</id>
    <content type="html"><![CDATA[<p>一不小心工作四年了，四年意味着，工作的时间都超过了上大学的时间。当然这也不能说明什么，接下来还会更快地超过上高中的时间。这些年来，我越来越喜欢把22岁大学毕业作为一个中点，对称着看。往后多少年是什么样，往前多少年又是什么样。这两个样子往往存在这因果关系，离中点近的直接，离中点远的深刻。</p>

<p>我很发愁给自己列计划，所以也不知道当时毕业的时候想的现在，应该是个什么摸样。反正就我照镜子的感受来说，应该没变老。这并不是说保养得好，主要是因为我第一天上班就有人问我是不是来领实习生。而最近都已经有些不开眼的妈妈跟自己的孩子说，还不快谢谢哥哥让座。</p>

<p>工作了四年，四家公司，三个城市，这段说起来太沧桑坎坷，就不提了。前段时间看到某个微薄名人说刚毕业几年，应该多闯几个行业，有好处。我虽然是一直敲键盘写代码，但是也辗转了不同的软件行业。以前以为没有区别，实际上一圈下来最后回到互联网行业里，才知道这大不同，不同到甚至同是程序员你们站在一起一样可能找不到哪怕一个共同话题。互联网行业的节奏快，创新多，年轻人在其中学习的空间最大。</p>

<p>另外我特别认可自己当初下了决定来AVOS。工作的第四年，是完完整整在这里，有机会有舞台面对挑战。我们上线了<a href="http://readwise.net/">美味爱读</a>，现在团队紧张地为<a href="https://delicious.com">Delicious</a>添砖加瓦。6年前我注册这个书签网站的时候，是无论如何想不到今天在上面做修改的人是自己。也就是这样的机会，最为吸引人。</p>

<p>无论是公司，还是我们团队，还是我自己，现在还没有到盘点成绩的时候。希望明年夏天再回顾的时候，能有更多的收获。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[纸上得来终觉浅]]></title>
    <link href="http://sunng87.github.io/blog//blog/2013/06/07/%E7%BA%B8%E4%B8%8A%E5%BE%97%E6%9D%A5%E7%BB%88%E8%A7%89%E6%B5%85/"/>
    <updated>2013-06-07T00:00:00+08:00</updated>
    <id>http://sunng87.github.io/blog//blog/2013/06/07/纸上得来终觉浅</id>
    <content type="html"><![CDATA[<p>之前看过无数的书无数的文章，讲可扩展性讲大型架构，不过真到了自己上场，毕竟还是没有从头到尾实践过，心里还有些没底。每做一个决定，每选定一个方案，心里都要反复打鼓，这是不是在给自己挖坑，是不是导致今后要浪费很多可乐咖啡的一个决定。第一份工作在盛大的时候，参与过这种规模比较大的项目，但是核心的部分，容量规划，性能评估，优化，都是那时的老大操心，我在一旁旁观。操心和旁观的区别大了去了，晚上睡不着的那几个小时，旁观的人享受不到，等来临的时候，就要如履薄冰地担着。</p>




<p>公司的团队构成跟硅谷类似，不存在专门的“产品经理”，负责人要从后端到前端，从开发到部署，从运维到监控，从代码到UI设计，产品甚至到运营，都需要有所操心。好在团队经过一年多的锻炼，技术成熟配合也默契，各司其职又都是三头六臂，能在这样的过程里成长，书里读不到。</p>




<p>一直是做互联网信息类的产品，现在自己制造的信息却越来越少，有些于心不忍，于是寥寥记录一下。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R/W Update#1: 更好的时间线]]></title>
    <link href="http://sunng87.github.io/blog//blog/2013/01/31/1307/"/>
    <updated>2013-01-31T00:00:00+08:00</updated>
    <id>http://sunng87.github.io/blog//blog/2013/01/31/1307</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/wReNhae.jpg" alt="" /></p>




<p>这周的工作，界面上能展示的不多。我们对时间线做了比较大的手术。</p>




<p>原先的时间线的工作机制，是以☐☐☐☐☐☐☐☐☐☐☐☐☐（此处省略200字）。这样的机制有两个明显的问题：
<ol /></p>




<p> <li>    看过和没有看过的文章常常交错在一起，让人迷惘</li></p>




<p>     <li>   一夜过后，时间线上出现很神奇的情况，文章的热度排列为「冷…热…冷…热…」</li>
</p>




<p>不仅是很多用户，我自己使用的过程中也感到很不方便。于是我们痛下决心，抄起键盘对时间线大刀阔斧一番。 一小时前上线的版本已经基本解决了上面提到的问题。如若问题依旧，请参考题图。</p>




<p>还有可以提一句，用户名旁边显示的数字是你的 Karma。目前 Karma 可以通过评论和评论被投票获得。</p>




<p><img src="http://i.imgur.com/tqjVRN6.png" alt="" /></p>




<p>还有什么比工程师写得产品博客更平淡的，而且他还要一边 test on production。</p>




<p>对对对，我们的工程师 <a href="https://github.com/debugger87/">debugger87</a> 昨天回家结婚，顺便过年了，我们祝他新婚愉快。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[螺旋发展的技术]]></title>
    <link href="http://sunng87.github.io/blog//blog/2012/12/21/%E8%9E%BA%E6%97%8B%E5%8F%91%E5%B1%95%E7%9A%84%E6%8A%80%E6%9C%AF/"/>
    <updated>2012-12-21T00:00:00+08:00</updated>
    <id>http://sunng87.github.io/blog//blog/2012/12/21/螺旋发展的技术</id>
    <content type="html"><![CDATA[<p>那个谁说世界是螺旋发展的，我说也真是。</p>




<p>现在的云计算潮流，经常能听到哪个地方哪个企业又推广云办公了，大家只要有一个显示器一样的瘦终端就可以连到云中，走到哪办公到哪。可是一想，这不就是黑客时代的主机/终端架构吗，一个用作输入输出的终端，连接到用于运算的主机上。当然，这里又可以说出千差万别（要不然这30年也白活了），但是至少大方面上他们是相同的。</p>




<p>再说这两年流行的移动应用开发，让我想到快十年前那阵的很多共享软件。那会大家还学个Windows的桌面开发，MFC什么的。后来一阵所谓B/S架构的风刮起来，人们一夜之间都不屑于做这种桌面开发了。当时几个论据，跨平台的问题，软件分发的问题，确实得到了很好的解决。但是iphone流行起来以后，仿佛一夜之间又回到了桌面开发的时代。跨平台和软件分发的事也没人提了，辛辛苦苦地为了各种分辨率做设计，做测试，似乎看起来都不是个事。因为人们发现，还是本地应用的体验好。可是谁又能保证也许有那么一天，当本地应用的优势不再那么明显的时候，大家又会谈起跨平台，软件分发的事。</p>




<p>说到跨平台了，Java的WORA（write once, run anywhere）当年是很大的卖点。可后来人们发现，好像也没这个必要，WOCA可以，退一步各个平台开发也不是事。不过又过了这么多年，平台越来越多了，光手机就三四个，这样的事恐怕又要被提起了。</p>




<p>最后再说个小的。当年的网页用表格布局，后来被我们俗称div+css的组合横扫了，以至于用表格布局最后都不好意思跟人打招呼。这么些年过去了，人们发现自己其实真真切切地需要用表格布局，但是为了体现时代的进步，现在叫做grid layout。看看微软提得CSS 3的grid属性：<br />
[cc lang="css"]<br />
grid-column: 1; grid-column-span: 3; grid-row: 1;<br />
[/cc]</p>




<p>活脱一个table里的colspan。</p>




<p>当然，其实还是发展了，原先写在html里的东西，现在用css就可以解决。和前面的例子一样，看似一样，但是都是绕了回来。不好说是从弯路绕回直路，还是相反。在一个时期是正确的，待一些客观条件成熟了，也许换回原来的方式也是正确的。</p>




<p></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keep-Alive]]></title>
    <link href="http://sunng87.github.io/blog//blog/2012/06/02/keep-alive/"/>
    <updated>2012-06-02T00:00:00+08:00</updated>
    <id>http://sunng87.github.io/blog//blog/2012/06/02/keep-alive</id>
    <content type="html"><![CDATA[<p>史无前例，上个月只写了一篇blog，再加上网站遭遇认证很多地方都访问不了，故而有必要keep alive一下，该reconnect的请自觉重连。</p>




<p>从家里出来，再次跑到北京来，就做好了艰苦卓绝的思想准备。现在的工作节奏，和2010年春天在盛大在线的时候差不多。那时一腔热血，也没什么经验，做什么事都心里没底。当然也是那段时间学到的东西最多，人生就是这样，熬过一个最困难的时候，总会有巨大的收获（如果没有收获说明还没熬过去，下同）。时过境迁，现在的情况有了巨大的不同，比如看<a href="http://tech.sina.com.cn/i/2012-05-26/03317171784.shtml" target="_blank">这里</a>。曾经没日没夜的奋斗的项目，最后烟消云散仿佛都不存在过。</p>




<p>人最大的瓶颈是时间，时间不可逆，挥霍掉就没有了。为了能有口饭吃，大部分时间还得拿自己的时间去换别人的金钱。如果这个时间能有合理的回报或是各取所需最好，如果这个工作自己也认同倒也不错。如果是纯粹的时间换金钱（所谓工作毕竟是工作），那就难免悲伤了。所以看到<a href="http://www.gsb.stanford.edu/news/research/aaker_happiness_2011.html" target="_blank">这样</a>一篇文章，还是觉得你很有必要快速浏览一下：
<ul>
    <li>Spend time with the right people. </li>
    <li>Spend time on the right activities. </li>
    <li>Enjoy experiences without spending time actually doing them. </li>
    <li>Expand your time. </li>
    <li>Be aware that happiness changes over time.</li>
</ul>
时间自由是人生最高自由。为了合理的利用时间，请关掉你正在折腾配置文件的emacs。</p>




<p>做了一个brogrammer的<a href="http://www.aqee.net/docs/Quiz-Are-You-a-Brogrammer/" target="_blank">测验</a>，和公司同事一起做的。结果得分-105，算是标准nerd了，在公司也是仅次于老板的-120。这个分数基本让人满意，对于那些戴墨镜编程的brogrammer，我想说的是，我的emacs一直是深色背景。</p>




<p></p>

]]></content>
  </entry>
  
</feed>
